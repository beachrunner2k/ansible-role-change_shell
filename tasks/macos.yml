---

# determine the current shell
- name: Get current user shell path
  shell: "dscl . -read /Users/{{ user }} UserShell | sed 's/UserShell: //'"
  register: result
  changed_when: false

- name: Set current user shell path
  set_fact:
    user_shell_path_current: "{{ result.stdout }}"

# check if specified shell is preinstalled
- name: Check if shell is preinstalled in macOS
  set_fact:
    shell_preinstalled: true
  when: user_shell_new in macOS_preinstalled_shells

- name: Check if shell is in list of supported shells
  set_fact:
    shell_supported: true
  when: user_shell_new in macOS_additional_shells

- name: Fail if specified shell is not supported
  fail:
    msg: "Shell {{ user_shell_new }} is not supported."
  when: shell_preinstalled is not defined and shell_supported is not defined

- name: Install the shell if required (with Homebrew)
  homebrew:
    name: "{{ user_shell_new }}"
    state: present
  when: shell_supported is true and shell_preinstalled is not defined

# perform specific tasks for non-preinstalled shells

# if fish, add path to fish to /etc/shells
- name: include the fish task
  import_tasks: macos_fish.yml
  when: user_shell_new == "fish"

# set fact for the shell path
- name: Set shell path
  set_fact:
    user_shell_path_new: "{{ shell_dir_mac }}/{{ user_shell_new }}"

# run a chsh command to change the shell to the desired shell
# chsh -s /bin/zsh ansible_user
- name: Change user shell
  shell: "chsh -s {{ user_shell_path_new }} {{ user }}"
  when: user_shell_path_current != user_shell_path_new
  become: true
  become_user: root
